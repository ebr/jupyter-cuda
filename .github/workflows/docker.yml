on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  # Base image with CUDA
  ROOT_CONTAINER: "nvidia/cuda:11.6.2-cudnn8-runtime-ubuntu20.04"
  # Dockerhub owner
  OWNER: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE: jupyter-gpu

jobs:
  build:
    name: build-push
    runs-on: ubuntu-20.04
    steps:
      - name: set up buildx
        uses: docker/setup-buildx-action@v2

      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: dockerhub-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build-base-image
        uses: docker/build-push-action@v3
        with:
          context: jupyter-docker-stacks/base-notebook
          push: true
          # Tagging `base` image with name as expected by `minimal` Dockerfile!
          tags: ${{env.OWNER}}/base-notebook
          build-args: |
            ROOT_CONTAINER=${{env.ROOT_CONTAINER}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: list-docker-images
        run: |
          docker images

      - name: build-minimal-image
        uses: docker/build-push-action@v3
        with:
          context: jupyter-docker-stacks/minimal-notebook
          tags: ${{env.OWNER}}/minimal-notebook
          build-args: |
            OWNER=${{env.OWNER}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

#      - name: upload image as artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{env.IMAGE}}-minimal
#          path: /tmp/${{env.IMAGE}}-minimal.tar
#          retention-days: 1
