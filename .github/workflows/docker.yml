on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  # Base image with CUDA
  ROOT_CONTAINER: "nvidia/cuda:11.6.2-cudnn8-runtime-ubuntu20.04"
  # Dockerhub owner
  OWNER: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE: jupyter-gpu

jobs:
  build:
    name: build-push
    runs-on: ubuntu-20.04
    steps:
      - name: set up buildx
        uses: docker/setup-buildx-action@v2

      - name: set up docker layer cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-cache-${{ env.GITHUB_REF_NAME }}
          restore-keys: |
            buildx-cache-

      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: build-base-image
        run: |

          # Tagging `base` image with name as expected by `minimal` Dockerfile!

          docker build \
            --build-arg ROOT_CONTAINER \
            --cache-from /tmp/.buildx-cache \
            --tag ${{env.OWNER}}/base-notebook \
            jupyter-docker-stacks/base-notebook
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        shell: bash

      - name: build-minimal-image
        run: |
          docker build \
            --build-arg OWNER \
            --cache-from /tmp/.buildx-cache \
            --tag ${{env.OWNER}}/minimal-notebook \
            jupyter-docker-stacks/minimal-notebook
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        shell: bash

  #     - name: save-tarball
  #       run: |
  #         docker save ${{env.OWNER}}/minimal-notebook -o /tmp/${{env.IMAGE}}-minimal.tar
  #       env:
  #         DOCKER_BUILDKIT: 1
  #         BUILDKIT_PROGRESS: plain
  #       shell: bash

  #     - name: upload image as artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{env.IMAGE}}-minimal
  #         path: /tmp/${{env.IMAGE}}-minimal.tar
  #         retention-days: 1

  # push:
  #   name: push
  #   needs: build
  #   environment: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: set up buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: set up docker layer cache
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: buildx-cache-${{ env.GITHUB_REF_NAME }}
  #         restore-keys: |
  #           buildx-cache-

      - name: dockerhub-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      ### https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#local-cache
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.OWNER }}/${{ env.IMAGE}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
