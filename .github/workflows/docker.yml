on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

env:
  # Base image with CUDA
  ROOT_CONTAINER: "nvidia/cuda:11.6.2-cudnn8-runtime-ubuntu20.04"
  # Dockerhub owner
  OWNER: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE: jupyter-gpu

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    steps:
      - name: set up buildx
        uses: docker/setup-buildx-action@v2

      - name: set up docker layer cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-cache-${{ env.GITHUB_REF_NAME }}
          restore-keys: |
            buildx-cache-

      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: build-base-image
        run: |

          # Tagging `base` image with name as expected by `minimal` Dockerfile!

          docker build \
            --build-arg ROOT_CONTAINER \
            --cache-from /tmp/.buildx-cache \
            --tag ${{env.OWNER}}/base-notebook \
            jupyter-docker-stacks/base-notebook
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        shell: bash

      - name: build-minimal-image
        run: |
          docker build \
            --build-arg OWNER \
            --cache-from /tmp/.buildx-cache \
            --tag ${{env.OWNER}}/minimal-notebook \
            jupyter-docker-stacks/minimal-notebook
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        shell: bash

      - name: save-tarball
        run: |
          docker save ${{env.OWNER}}/minimal-notebook -o /tmp/${{env.IMAGE}}-minimal.tar
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        shell: bash

      - name: upload image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.IMAGE}}-minimal
          path: /tmp/${{env.IMAGE}}-minimal.tar
          retention-days: 1



#  push:
#    name: push
#    runs-on: ubuntu-20.04
#    secrets:
#      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#    steps:
#      - name: dockerhub-login
#        uses: docker/login-action@v2
#        with:
#          username: {{ DOCKERHUB_USERNAME }}
#          password: {{ DOCKERHUB_TOKEN }}


#concurrency:
#  cancel-in-progress: true
